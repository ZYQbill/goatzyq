#include <bits/stdc++.h>
#define debug(x) cout << #x <<"\t"<<x <<endl 

using namespace std;

const int maxn = 1 << 20;
using ll = long long;

char s[maxn], t[maxn];
int n;

struct SAM {
    int ch[maxn<<1][26], len[maxn<<1] = {-1}, fa[maxn<<1];
    int sz = 2, last = 1;
    void init() {
        sz = 2;
        last = 1;
        memset(ch[1], 0, sizeof(ch[1]));
    }
    void extend(int c) {
        int p = last, np = last = sz++;
        memset(ch[np], 0, sizeof(ch[np]));
        len[np] = len[p] + 1;
        for (; p && !ch[p][c]; p = fa[p]) ch[p][c] = np;
        if (!p) {
            fa[np] = 1;
            return;
        }
        int q = ch[p][c];
        if (len[p] + 1 == len[q]) {
            fa[np] = q;
        } else {
            int nq = sz++;
            len[nq] = len[p] + 1;
            memcpy(ch[nq], ch[q], sizeof(ch[0]));
            fa[nq] = fa[q];
            fa[np] = fa[q] = nq;
            for (; ch[p][c] == q; p = fa[p]) ch[p][c] = nq;
        }
        return;
    }
    ll query(){
    	ll ret = 0, ans =0;
		int p = 1;
    	for(int i=0; i<n; ++i){
    		int c = t[i] - 'a';
    		if(ch[p][c])ret++, p = ch[p][c];
    		else{
    			while(p&&!ch[p][c])p=fa[p];
    			if(p){
    				ret = len[p] + 1;
    				p = ch[p][c];
				}else{
					p = 1, ret= 0;
				}
			}
			ans = max(ans, ret);
		}
		return ans;
	}
}sam;

int main()
{
    sam.init();
    scanf("%s", s);
    scanf("%s", t);
    n = strlen(s);
    for (int i = 0; i < n; ++i){
    	sam.extend(s[i]-'a');
	}
	n = strlen(t);
	cout << sam.query();
    return 0;
}
